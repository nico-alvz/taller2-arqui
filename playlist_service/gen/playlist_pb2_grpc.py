# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import playlist_pb2 as playlist__pb2

GRPC_GENERATED_VERSION = '1.73.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in playlist_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class PlaylistServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePlaylist = channel.unary_unary(
                '/playlist.PlaylistService/CreatePlaylist',
                request_serializer=playlist__pb2.CreatePlaylistRequest.SerializeToString,
                response_deserializer=playlist__pb2.PlaylistResponse.FromString,
                _registered_method=True)
        self.GetPlaylist = channel.unary_unary(
                '/playlist.PlaylistService/GetPlaylist',
                request_serializer=playlist__pb2.GetPlaylistRequest.SerializeToString,
                response_deserializer=playlist__pb2.PlaylistResponse.FromString,
                _registered_method=True)
        self.UpdatePlaylist = channel.unary_unary(
                '/playlist.PlaylistService/UpdatePlaylist',
                request_serializer=playlist__pb2.UpdatePlaylistRequest.SerializeToString,
                response_deserializer=playlist__pb2.PlaylistResponse.FromString,
                _registered_method=True)
        self.DeletePlaylist = channel.unary_unary(
                '/playlist.PlaylistService/DeletePlaylist',
                request_serializer=playlist__pb2.DeletePlaylistRequest.SerializeToString,
                response_deserializer=playlist__pb2.Empty.FromString,
                _registered_method=True)
        self.ListPlaylists = channel.unary_unary(
                '/playlist.PlaylistService/ListPlaylists',
                request_serializer=playlist__pb2.ListPlaylistsRequest.SerializeToString,
                response_deserializer=playlist__pb2.ListPlaylistsResponse.FromString,
                _registered_method=True)
        self.AddVideo = channel.unary_unary(
                '/playlist.PlaylistService/AddVideo',
                request_serializer=playlist__pb2.AddVideoRequest.SerializeToString,
                response_deserializer=playlist__pb2.PlaylistResponse.FromString,
                _registered_method=True)
        self.ListVideos = channel.unary_unary(
                '/playlist.PlaylistService/ListVideos',
                request_serializer=playlist__pb2.ListVideosRequest.SerializeToString,
                response_deserializer=playlist__pb2.ListVideosResponse.FromString,
                _registered_method=True)


class PlaylistServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreatePlaylist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlaylist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePlaylist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePlaylist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPlaylists(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddVideo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListVideos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PlaylistServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePlaylist': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePlaylist,
                    request_deserializer=playlist__pb2.CreatePlaylistRequest.FromString,
                    response_serializer=playlist__pb2.PlaylistResponse.SerializeToString,
            ),
            'GetPlaylist': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlaylist,
                    request_deserializer=playlist__pb2.GetPlaylistRequest.FromString,
                    response_serializer=playlist__pb2.PlaylistResponse.SerializeToString,
            ),
            'UpdatePlaylist': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePlaylist,
                    request_deserializer=playlist__pb2.UpdatePlaylistRequest.FromString,
                    response_serializer=playlist__pb2.PlaylistResponse.SerializeToString,
            ),
            'DeletePlaylist': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePlaylist,
                    request_deserializer=playlist__pb2.DeletePlaylistRequest.FromString,
                    response_serializer=playlist__pb2.Empty.SerializeToString,
            ),
            'ListPlaylists': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPlaylists,
                    request_deserializer=playlist__pb2.ListPlaylistsRequest.FromString,
                    response_serializer=playlist__pb2.ListPlaylistsResponse.SerializeToString,
            ),
            'AddVideo': grpc.unary_unary_rpc_method_handler(
                    servicer.AddVideo,
                    request_deserializer=playlist__pb2.AddVideoRequest.FromString,
                    response_serializer=playlist__pb2.PlaylistResponse.SerializeToString,
            ),
            'ListVideos': grpc.unary_unary_rpc_method_handler(
                    servicer.ListVideos,
                    request_deserializer=playlist__pb2.ListVideosRequest.FromString,
                    response_serializer=playlist__pb2.ListVideosResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'playlist.PlaylistService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('playlist.PlaylistService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PlaylistService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreatePlaylist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/playlist.PlaylistService/CreatePlaylist',
            playlist__pb2.CreatePlaylistRequest.SerializeToString,
            playlist__pb2.PlaylistResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPlaylist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/playlist.PlaylistService/GetPlaylist',
            playlist__pb2.GetPlaylistRequest.SerializeToString,
            playlist__pb2.PlaylistResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdatePlaylist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/playlist.PlaylistService/UpdatePlaylist',
            playlist__pb2.UpdatePlaylistRequest.SerializeToString,
            playlist__pb2.PlaylistResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeletePlaylist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/playlist.PlaylistService/DeletePlaylist',
            playlist__pb2.DeletePlaylistRequest.SerializeToString,
            playlist__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListPlaylists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/playlist.PlaylistService/ListPlaylists',
            playlist__pb2.ListPlaylistsRequest.SerializeToString,
            playlist__pb2.ListPlaylistsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddVideo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/playlist.PlaylistService/AddVideo',
            playlist__pb2.AddVideoRequest.SerializeToString,
            playlist__pb2.PlaylistResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListVideos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/playlist.PlaylistService/ListVideos',
            playlist__pb2.ListVideosRequest.SerializeToString,
            playlist__pb2.ListVideosResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
